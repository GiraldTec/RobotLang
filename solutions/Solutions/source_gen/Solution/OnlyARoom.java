package Solution;

/*Generated by MPS */

import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.Graphics;
import javax.swing.WindowConstants;
import java.awt.Dimension;

public class OnlyARoom extends JFrame {

  private JPanel panel = new JPanel() {
    @Override
    protected void paintComponent(Graphics graphics) {
      super.paintComponent(graphics);
    }


  };

  private int width;
  private int height;
  private void initialize() {
    this.setTitle("OnlyARoom");
    this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    this.add(panel);
    width = 500;
    height = 500;
    panel.setPreferredSize(new Dimension(width, height));
    this.pack();
    this.setVisible(true);
  }

  public int moveForwardX(int x, int dir, int dist) {
    int r = x;
    System.out.println("moveX");
    System.out.println(dir);

    switch (dir) {
      case 2:
      case 1:
      case 3:
        System.out.println("case right");
        r = x + dist;
        break;
      case 5:
      case 6:
      case 7:
        System.out.println("case left");

        r = x - dist;
        break;
      default:
        System.out.println("case up or down");

    }
    if (r > width) {
      r = width - 5;
    }
    if (r <= 0) {
      r = 5;
    }

    return r;
  }
  public int moveForwardY(int y, int dir, int dist) {
    int r = y;
    System.out.println("moveY");
    System.out.println(dir);

    switch (dir) {
      case 1:
      case 7:
      case 0:
        System.out.println("case up");

        r = y - dist;
        break;
      case 3:
      case 4:
      case 5:
        System.out.println("case down");

        r = y + dist;
        break;
      default:
        System.out.println("case left or right");

    }
    if (r > height) {
      r = height - 5;
    }
    if (r <= 0) {
      r = 5;
    }
    return r;
  }


  public static void main(String[] args) {
    OnlyARoom room = new OnlyARoom();
    room.initialize();
  }


}
